
[enabled_plugins]

# List all plugins to enable pxx = PluginName
# Enable the ScotteCom plugin to communicate with a NBE scotty/woody/biocomfort pellet burner
p01 = ScotteCom

# CustomAlarms lets you define limits and actions for data items
#p02 = CustomAlarms

# RaspberryGPIO works only on a raspberry pi
#p03 = RaspberryGPIO

# Testplugin is a plugin template that does nothing useful
#p99 = TestPlugin

[plugin_ScotteCom]
# The settings in this section are passed to the ScotteCom plugin

# Serial port device name, eg. /dev/ttyUSB0
# Remove to run with dummy data for testing
serialport = /dev/ttyUSB0

# Chip version string or 'auto'
chipversion = auto

[plugin_TestPlugin]
# Items in sections named as "plugin_xxx" are passed to a plugin named "xxx"
# This plugin adds the items listed as dummy parameters
plugindata1 = 123

[plugin_CustomAlarms]
# Define an alarm by creating four parameters:
# xxx_item = item to read
# xxx_comparator = >|>=|<|<=|==|!=
# xxx_level = level to compare against
# xxx_status = item to hold the result of the comparision, 1=True, 0=False
# optional:
# xxx_enum = FalseText|TrueText

# example: 
alarm1_item = boiler_temp
alarm1_comparator = >
alarm1_level = 90
alarm1_status = boiler_temp_supervision
alarm1_enum = OK|Boiler temperature too high

alarm2_item = chute_temp
alarm2_comparator = >
alarm2_level = 45
alarm2_status = boiler_temp_supervision
alarm2_enum = OK|Chute temperature too high

[conf]
# Full path to the rrd database, if it does not exist it is created
# Remove if you do not want data polling 
database = @localstatedir@/lib/pellmon/rrd.db

# Full path to the optional persistent rrd database. It is copied
# over the database file at startup, and on shutdown the database
# is copied to the persistent_db file. Useful if the database
# is in a ramdisk
#persistent_db = @localstatedir@/lib/pellmon/nvrrd.db

# If persistent_db is in use the database is copied to 
# persistent_db every db_store_interval seconds
db_store_interval = 7200
# Full path to the logfile
logfile = @localstatedir@/log/pellmon/pellmon.log

# logging level = info/debug
loglevel = info

# Port number for the webserver
port = 8081

# rrd database update interval in seconds
pollinterval = 30

[authentication]
# username = password, for webinterface
testuser = 12345

[rrd_ds_names]
# These are the datasource names used when creating the rrd database,
# "dxx = datasource name". The left value (dxx) is used to match the
# datasource names to the actual data to write to it, in the 
# pollvalues section. The datasource names can be anything, but 
# the defaults are the same as the data item names in the pollvalues section 
# The rrd database is created with the datasources in the order they appear here.
# Delete or rename the rrd database file after adding/removing ds-names
# or use some other method to add the new ds-name to the existing rrd database
d01 = power_kW
d02 = boiler_temp
d03 = chute_temp
d04 = light
d05 = oxygen_desired
d06 = oxygen
d07 = power
d08 = smoke_temp
d09 = feeder_time
d10 = feeder_capacity
d11 = _logtick

[rrd_ds_types]
# Optional rrd data source type definitions for the datasource names in the 
# rrd_ds-names section. If no type is defined for a datasource name the 
# default type is used, "DS:%s:GAUGE:%u:U:U", where %s is replaced with the 
# datasource name and %u is replaced with 4*pollinterval
d09 = DS:%s:COUNTER:%u:U:U
d11 = DS:%s:COUNTER:%u:U:U

[pollvalues]
# Data values to write to the rrd database.
# "dxx = parameter/data name"
# The data names are read from the protocol plugins with the getItem method
# and written to the rrd database ds-name that has a matching "dxx".
# Data names starting with an underscore are handled by special cases in the code,
# eg. _logtick is updated whenever a protocol reports that an "event" has occured.
# In general underscored names are written as undefined, so they can be used to 
# write "spare" ds-names in an rrd database, to avoid having to recreate the rrd
# when more sensors are added. 
d01 = power_kW
d02 = boiler_temp
d03 = chute_temp
d04 = light
d05 = oxygen_desired
d06 = oxygen
d07 = power
d08 = smoke_temp
d09 = feeder_time
d10 = feeder_capacity
# Whenever something is written to the log, _logtick is also increased.
# It is used to draw a tickmark in the graph
d11 = _logtick

[graphcolors]
# To add a ds-name from the rrd-database to the graph, set
# dxx = #hexcolorvalue
d01 = #FF0000
d02 = #00FF00
d03 = #0000FF
d04 = #FFFF00
d05 = #FF05FF
d06 = #0101FF
d07 = #207F20
d08 = #2F2FFF

[email]
# Uncomment and set these for email on mode/alarm status changes
# Uses TLS, this works for gmail:
#server=smtp.gmail.com:587
#username=user
#password=12345
#from=user@mail.com
#to=user@mail.com
#subject=PellMon status
# Send email when any of these change
#conditions=alarm,mode,parameter
